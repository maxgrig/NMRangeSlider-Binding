XBUILD=/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild
PROJECT_ROOT=.
PROJECT=$(PROJECT_ROOT)/NMRangeSlider.xcodeproj

# The name of the target is generated by the Xcode
TARGET=NMRangeSlider

# The name of the .a file is generated by the project, without the "lib" prefix or the ".a" suffix.
LIB=NMRangeSlider

all: libNMRangeSliderUniversal.a

libNMRangeSlideri386.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphonesimulator -configuration Release clean build 
	-mv $(PROJECT_ROOT)/build/Release-iphonesimulator/lib$(LIB).a $@

libNMRangeSliderArmv7.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch armv7 -configuration Release clean build
	-mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(LIB).a $@

# We remove it from here. $(ARCHS_STANDARD) does not include armv7s. You can build armv7s binary though:
# libyourArmv7s.a:
#   $(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch armv7s -configuration Release clean build
#   -mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(LIB).a $@

libNMRangeSliderArm64.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch arm64 -configuration Release clean build
	-mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(LIB).a $@

# Without armv7s:
libNMRangeSliderUniversal.a: libNMRangeSlideri386.a libNMRangeSliderArmv7.a libNMRangeSliderArm64.a
	lipo -create -output lib$(LIB)Universal.a $^

clean:
	-rm -f *.a *.dll
	-rm -rf build
